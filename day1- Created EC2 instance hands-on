# Provider configuration
provider "aws" {
  region = "us-east-1"
}

# Create a VPC (if you don't already have one)
resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"

  tags = {
    Name = "MyTerraformVPC"
  }
}

# Create a subnet inside the VPC
resource "aws_subnet" "my_subnet" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "MyTerraformSubnet"
  }
}

# Create a security group to allow inbound SSH (port 22) and HTTP (port 80) traffic
resource "aws_security_group" "my_sg" {
  vpc_id      = aws_vpc.my_vpc.id
  name        = "allow_ssh_http"
  description = "Allow SSH and HTTP inbound traffic"

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "MySecurityGroup"
  }
}

# Create an EC2 instance and use the existing key pair
resource "aws_instance" "my_instance" {
  ami           = "ami-0866a3c8686eaeeba"  # Updated AMI ID
  instance_type = "t2.micro"  # Free-tier eligible

  # Use the existing key pair
  key_name = "firstnew"  # Reference your existing key pair by name

  # Attach the security group
  vpc_security_group_ids = [aws_security_group.my_sg.id]

  # Specify the subnet where the instance should be created
  subnet_id = aws_subnet.my_subnet.id

  tags = {
    Name = "MyTerraformEC2"
  }
}
